plugins {
    id 'java'
    id 'com.google.protobuf' version '0.9.5'  // Updated plugin version
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.java'
version = '1.0-SNAPSHOT'
sourceCompatibility = '17'

configurations.all {
    resolutionStrategy {
        force 'com.google.protobuf:protobuf-java:3.25.5'
        force 'com.google.protobuf:protobuf-java-util:3.25.5'
    }
}

repositories {
    mavenCentral()
    maven { url 'https://packages.confluent.io/maven' }
    maven {
        url 'https://maven.pkg.github.com/sathwickreddyy/java-personal-library'
        credentials {
            username = 'sathwickreddyy'
            password = System.getenv("GITHUB_TOKEN")
        }
    }
}

dependencies {
    // Spring Boot managed dependencies (remove explicit versions)
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-integration'
    implementation 'org.springframework.integration:spring-integration-core'

    // Kafka/Confluent with version alignment
    implementation ('org.springframework.kafka:spring-kafka:3.1.4') {  // Compatible with Boot 3.2.2
        exclude group: 'org.apache.kafka', module: 'kafka-clients'
    }
    implementation 'org.apache.kafka:kafka-clients:3.7.1'
    implementation ('io.confluent:kafka-protobuf-serializer:7.7.1') {
        exclude group: 'com.google.protobuf', module: 'protobuf-java'
    }
    implementation 'io.confluent:kafka-schema-registry-client:7.7.1'

    // Protobuf
    implementation 'com.google.protobuf:protobuf-java:3.25.5'

    // Utilities
    implementation 'org.projectlombok:lombok:1.18.32'  // Updated Lombok
    annotationProcessor 'org.projectlombok:lombok:1.18.32'
    implementation 'ch.qos.logback:logback-classic:1.4.14'
    implementation 'redis.clients:jedis:3.7.0'
    implementation 'org.apache.commons:commons-math3:3.6.1'
    implementation 'com.java:personal-library:0.1.1'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.25.5'  // Aligned with runtime
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {}
            }
        }
    }
}

sourceSets {
    main {
        proto {
            srcDir 'src/main/resources/proto'
        }
    }
}

test {
    useJUnitPlatform()
}
