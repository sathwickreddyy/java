# Enhanced data-sources.yml with nested JSON path support
data-sourcing:
  data-sources:
    # Simple JSON object mapping
    user_profile_json:
      type: "JSON"
      source:
        filePath: "src/main/resources/sample-data/user_profiles.json"
        jsonPath: "$.users[*]"
      target:
        type: "model"
      columnMapping:
        - source: "id"
          target: "userId"
          dataType: "STRING"
          required: true
        - source: "profile.personal.firstName"
          target: "firstName"
          dataType: "STRING"
          required: true
        - source: "profile.personal.lastName"
          target: "lastName"
          dataType: "STRING"
          required: true
        - source: "profile.contact.email"
          target: "email"
          dataType: "STRING"
          required: true
        - source: "profile.contact.addresses[0].city"
          target: "city"
          dataType: "STRING"
        - source: "profile.contact.addresses[0].country"
          target: "country"
          dataType: "STRING"
          defaultValue: "USA"
      model:
        className: "UserProfileDTO"
        mappingStrategy: "MAPPED"
        strictMapping: true
      validation:
        requiredColumns: ["id", "profile.personal.firstName"]
        dataQualityChecks: true

    # Complex nested JSON with JSONPath
    order_details_json:
      type: "JSON"
      source:
        filePath: "src/main/resources/sample-data/orders.json"
        jsonPath: "$.orders[*]"
      target:
        type: "model"
      columnMapping:
        - source: "orderId"
          target: "orderId"
          dataType: "STRING"
          required: true
        - source: "customer.profile.name"
          target: "customerName"
          dataType: "STRING"
          required: true
        - source: "customer.contact.email"
          target: "customerEmail"
          dataType: "STRING"
        - source: "orderDetails.items[0].product.name"
          target: "primaryProduct"
          dataType: "STRING"
        - source: "orderDetails.items[0].quantity"
          target: "primaryQuantity"
          dataType: "INTEGER"
        - source: "orderDetails.pricing.total"
          target: "totalAmount"
          dataType: "BIGDECIMAL"
        - source: "orderDetails.shipping.address.city"
          target: "shippingCity"
          dataType: "STRING"
        - source: "orderDetails.shipping.address.zipCode"
          target: "shippingZip"
          dataType: "STRING"
        - source: "timestamps.created"
          target: "createdDate"
          dataType: "LOCALDATETIME"
          sourceDateFormat: "yyyy-MM-dd'T'HH:mm:ss'Z'"
      validation:
        requiredColumns: ["orderId", "customer.profile.name"]
        dataQualityChecks: true
      model:
        className: "OrderDetailsDTO"
        mappingStrategy: "MAPPED"
        strictMapping: true

#    # JSONPath with conditional filtering
#    active_products_json:
#      identifier: "ActiveProductsJSON"
#      type: "JSON"
#      source:
#        filePath: "src/main/resources/sample-data/user_profiles.json"
#        jsonPath: "$.products[?(@.status == 'active')]"
#      target:
#        type: "model"
#      columnMapping:
#        - source: "productId"
#          target: "productId"
#          dataType: "STRING"
#          required: true
#        - source: "details.name"
#          target: "productName"
#          dataType: "STRING"
#          required: true
#        - source: "details.description"
#          target: "description"
#          dataType: "STRING"
#        - source: "pricing.basePrice"
#          target: "basePrice"
#          dataType: "BIGDECIMAL"
#        - source: "pricing.currency"
#          target: "currency"
#          dataType: "STRING"
#          defaultValue: "USD"
#        - source: "inventory.quantity"
#          target: "stockQuantity"
#          dataType: "INTEGER"
#        - source: "categories[0]"
#          target: "primaryCategory"
#          dataType: "STRING"
#        - source: "metadata.createdAt"
#          target: "createdDate"
#          dataType: "LOCALDATE"
#          sourceDateFormat: "yyyy-MM-dd"
#      model:
#        className: "ProductDTO"
#        mappingStrategy: "MAPPED"
#        strictMapping: false
#      validation:
#        requiredColumns: ["productId", "details.name"]
#        dataQualityChecks: true
